package project_euler;


/**
 * 
 * Problem 2
 * Even Fibonacci numbers
 * 
 * Each new term in the Fibonacci sequence is generated by adding the previous
 * two terms. By starting with 1 and 2, the first 10 terms will be:
 * 
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * 
 * By considering the terms in the Fibonacci sequence whose values do not exceed
 * four million, find the sum of the even-valued terms.
 * 
 * @author periklas
 * 
 */

public class Problem002 {


	public static void main(String[] args) {
		fib();
		as();
	}

	//variables more than 91 cannot be hold by long int
	public static void fib(){
		long f =0, s=1, n = 2;
		for (int i = 0; i<91; i++){
			n= f+s;
			f=s;
			s=n;
			System.out.println(i+": "+ n);
		}

	}

	public static void as(){
		int f =0, s=1, n = 2;
		int max = 4000000;
		int sum = 0;
		while (n <= max){
			n= f+s;
			f=s;
			s=n;
			if (n%2 == 0){
				sum += n;
			}
		}
		System.out.println(sum);
	}
}
